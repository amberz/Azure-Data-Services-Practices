{
	"name": "ds_SQLToMultiParquet11_GroupRowNum",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_SQLTable_partitiontbl",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "ds_SQLTable_partitiontbl",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_blob_parquet",
						"type": "DatasetReference"
					},
					"name": "ParitionSink"
				},
				{
					"dataset": {
						"referenceName": "ds_blob_parquet_2",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "AddRowCount"
				},
				{
					"name": "AddRowCountS1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "AddRowNum"
				},
				{
					"name": "RemoveTop1Row"
				}
			],
			"script": "source(output(\n\t\tID as integer,\n\t\tCol1 as string,\n\t\tCol2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tID as integer,\n\t\tCol1 as string,\n\t\tCol2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1 derive(DerivedCol12 = concat(concat(trim(Col1),trim(Col2)),'.parquet')) ~> DerivedColumn1\nsource2 derive(DerivedColumn2 = concat(concat(trim(Col1),trim(Col2)),'.parquet')) ~> DerivedColumn2\nDerivedColumn2 aggregate(groupBy(DerivedColumn2),\n\tRowCount = count(1)) ~> AddRowCount\nDerivedColumn1, AddRowCount join(DerivedCol12 == DerivedColumn2,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> AddRowCountS1\nAddRowCountS1 split(greaterOrEqual(RowCount,2),\n\tdisjoint: false) ~> ConditionalSplit1@(GreaterOrEqual2, Lessthan2)\nConditionalSplit1@GreaterOrEqual2 window(over(DerivedCol12),\n\tasc(ID, true),\n\tMyRowNum = rowNumber()) ~> AddRowNum\nAddRowNum split(greaterOrEqual(MyRowNum,2),\n\tdisjoint: false) ~> RemoveTop1Row@(GreaterOrEqual2, LessOrEqual2)\nRemoveTop1Row@GreaterOrEqual2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfilePattern:'[n].parquet',\n\ttruncate: true,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tID,\n\t\tCol1,\n\t\tCol2,\n\t\tDerivedColumn2\n\t),\n\tpartitionBy('key',\n\t\t0,\n\t\tDerivedColumn2\n\t)) ~> ParitionSink\nConditionalSplit1@Lessthan2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\trowUrlColumn:'DerivedCol12',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
		}
	}
}